@use "./base/base_variables";

/*
Todo:

Make it component based.
Turn magic numbers into variables.
Redo it all with REM instead of EM, since EM makes everything
    dependent on the parent's font-size.
*/

/* ===========
Tooltips
============== */

#floating-tooltip {
    background-color: black;
    color: white;
    font-family: "Poppins", sans-serif;
    padding: .3em;

    position: absolute;

    transform: scale(0);
    opacity: 0;
    transition: transform 0.2s, opacity 0.1s;
}

#floating-tooltip-arrow {
    position: absolute;
    width: 10px;
    height: 10px;
    background-color: rgb(0, 0, 0);
    transform: rotate(45deg);
}

/* ===========
Projects page content
============== */

.project-container {
    display: grid;
    // figure dense out
    grid: auto-flow dense / repeat(3, 1fr);
    gap: var(--project-gap);
    
    /* If items overflow container, make them do so in a centered way. */
    justify-items: center;
    justify-content: center;

    margin-top: 2rem;
    
    --project-width: 14.2375rem;
    --project-gap: 2.375rem;
    
    width: 70%; // fallback
    width: calc(var(--project-width) * 3 + var(--project-gap) * 2);

    @media screen and (max-width: base_variables.$breakpoint-medium) {
        grid-template-columns: 1fr 1fr;

        width: 60%; // fallback
        width: calc(var(--project-width) * 2 + var(--project-gap) * 1);
    }
    
    @media screen and (max-width: base_variables.$breakpoint-small) {
        grid-template-columns: 1fr;
        justify-items: center;
        justify-content: center;

        width: 30%; // fallback
        width: calc(var(--project-width) * 1);
    }

    .project {
        width: fit-content; // basically thumbnail size

        /* prevent flicker on hover by easing the color from transparent */
        outline: 1px solid transparent;
        border-radius: 4px;

        transition: .3s ease-out outline-color;

        &:has(a:hover) {
            outline: 1px solid rgb(187, 186, 186);
        }

        .project__thumbnail {
            width: 13.438rem;
            height: 10.313rem;
            border-radius: 14px;
            background-color: #1D1B2C;

            display: flex;
            justify-content: center;
            align-items: center;

            img.thumbnail__img {
                width: 12.5rem;
                height: 9.375rem;
                border-radius: 14px;
                object-fit: cover;
                
                /* Display document color behind image for a nice visual
                when image progressively loads due to low bandwidth */
                background: base_variables.$document-bg-color;  
                /* Hide broken image alt text */
                color: base_variables.$document-bg-color;  
                
                position: relative;
            }
            /* Only works on non-replaced elements (if the image fails to load) */
            img.thumbnail__img::after {
                content: "Image source not found [404]";
                text-align: center;
                display: block;
                color: black;
                /* Use red color for error  */
                background: base_variables.$document-bg-color;
                background: rgb(255, 128, 128);
                width: 100%;
                height: 100%;
                
                display: grid;
                place-items: center;
                
                /* Put over-top the broken image (broken img icon takes up a lot of height for some reason) */
                position: absolute;
                top: 0;
                left: 0;
            }
        }

        .icons {
            width: 13.438rem;
            height: 1.5rem;
            border-radius: 5px;
            background-color: #1D1B2C;

            margin-top: 0.688rem;
            margin-bottom: 0.938rem;

            display: flex;
            justify-content: center;
            align-items: center;
            gap: 1.125rem;

            .icon {
                width: 2.125rem;
                height: 2.125rem;

                img.icon__img {
                    width: 2.125rem;
                    height: 2.125rem;
                    object-fit: cover;
                }

                /* jquery circle is kind of small. make it a bit larger to 
                       be around the same size as the other icons
                    */
                img.icon__img[title="jQuery"] {
                    width: 2.255rem;
                    height: 2.255rem;
                }
            }

            /* why does setting width/height to the same value show the full svg,
                whereas aspect-ratio cuts part of it off? */
            .icon.icon--medium {
                width: 2.525rem;
                height: 2.525rem;

                img.icon__img {
                    height: 2.525rem;
                    width: 2.525rem;
                }
            }

            .icon.icon--long {
                height: 2.525em;
                width: 3em;

                img.icon__img {
                    height: 2.525em;
                    width: 3em;
                    object-fit: contain;

                }
            }
        }

        .project__info {
            /* Grid auto makes a row track for each item by default.
            (grid-auto-flow). Basically flex-direction: column; but shorter syntax. */
            display: grid;
            row-gap: 0.3125rem;

            h2.info__heading {
                font-size: 1.25rem;
                margin-top: 0;
                line-height: .75em;
            }

            p.info__text {
                /* not sure why when I set the width equal to the project-thumbnail
                    width, the p width isn't the same as the project-thumbnail. Weird...*/
                width: 19.438em;
                font-size: 0.688rem;
                
                @media screen and (max-width: base_variables.$breakpoint-small) {
                    font-size: .7rem;
                }
            }
        }

        a.project__link {
            color: black;
            text-decoration: none;
            
            padding: .4rem;

            /*
                Inline elements can only contain other inline elements by default.
                Set the link to display flex (block container, flex children)
                ... so that we can have HTML5 compliance
                ... and have block children children in the clickable area.
                Also so we can position the block children.
                We could also do inline-flex, but that would be more characters.
                Many ways to pet the cat.
                https://stackoverflow.com/questions/8160494/how-to-make-a-whole-div-clickable-in-html-and-css-without-javascript
            */
            display: flex;
            flex-direction: column;
            align-items: center;
        }
    }
}